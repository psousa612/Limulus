{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulo/Projects/School/111_Database_Systems/Limulus/react-app/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getQuestion, answeredQuestion, getQuestionStats } from '../api/questions';\nimport './style.scss';\nimport './quiz.scss';\n\nconst Quiz = () => {\n  _s();\n\n  // eslint-disable-next-line no-unused-vars\n  const [questionData, setQuestionData] = useState({});\n  const [correctResponse, setCorrectResponse] = useState(\"\");\n  const [buttons, setButtons] = useState([]);\n  const [disabled, setDisabled] = useState(\"\");\n  const [prompt, setPrompt] = useState('');\n  const [resultText, setResultText] = useState(\"\");\n  const [pointsText, setPointsText] = useState(\"\");\n  const [questionStats, setQuestionStats] = useState([]);\n  var currQkey;\n  let statsHeaders = [\"Question Key\", \"Total Answers\", \"Total Correct Answers\", \"Total First Tries\"];\n  useEffect(() => {\n    nextQuestion();\n  }, []);\n\n  async function nextQuestion() {\n    //Call the api to get the next question data\n    getQuestion().then(data => {\n      //Populate internal variables for later use\n      setQuestionData(data);\n      currQkey = data[\"prompt\"][0];\n      setDisabled(false); //Populate the fields with the next question info\n\n      let scrubbedPrompt = data[\"prompt\"][2].replace(/&quot;/g, '\"');\n      scrubbedPrompt = scrubbedPrompt.replace(/&#039;/g, \"'\");\n      setPrompt(scrubbedPrompt);\n      var buts = [];\n\n      for (const row of data[\"responses\"]) {\n        let scrubbedBut = row[1].replace(/&quot;/g, '\\\\\"');\n        scrubbedBut = scrubbedBut.replace(/&#039;/g, '\\\\\"'); // buts.push(<button onClick={handleClick} disabled={disabled} key={scrubbedBut}>{scrubbedBut}</button>)\n\n        buts.push(scrubbedBut);\n\n        if (row[2]) {\n          // console.log(\"true!\")\n          setCorrectResponse(scrubbedBut); // console.log(\"Correct Response is: \", scrubbedBut)\n        }\n      }\n\n      setButtons(buts);\n    });\n  }\n\n  function handleClick(e) {\n    let correct = false;\n\n    if (e.target.innerHTML === correctResponse) {\n      setResultText(\"Correct!\");\n      correct = true;\n    } else {\n      setResultText(\"Wrong!\");\n      correct = false;\n    }\n\n    let uname = localStorage.getItem(\"username\");\n    answeredQuestion(uname, questionData[\"prompt\"][0], correct).then(data => {\n      setPointsText(data);\n    }).then(() => {\n      getQuestionStats(questionData[\"prompt\"][0]).then(data => {\n        let statsData = [];\n        statsData.push(data[\"question_key\"]);\n        statsData.push(data[\"total_amt\"]);\n        statsData.push(data[\"total_correct\"]);\n        statsData.push(data[\"total_first_try_correct\"]);\n        setQuestionStats(statsData);\n      });\n    });\n    setDisabled(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button-grid\",\n      children: buttons.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          disabled: disabled,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: !disabled,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: resultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this), resultText === \"Wrong!\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Correct Answer: \", correctResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have \", pointsText, \" points.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics For This Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"question-stats\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [questionStats.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"td-header\",\n                children: [statsHeaders[index], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                class: \"td-value\",\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 97\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 32\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"td-header\",\n              children: \"Total Wrong Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"td-value\",\n              children: questionStats[1] - questionStats[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 102\n            }, this)]\n          }, questionStats.length, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"LE0jHn23CLijsPM4IFhrc06LycU=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/paulo/Projects/School/111_Database_Systems/Limulus/react-app/src/components/Quiz.js"],"names":["React","useEffect","useState","getQuestion","answeredQuestion","getQuestionStats","Quiz","questionData","setQuestionData","correctResponse","setCorrectResponse","buttons","setButtons","disabled","setDisabled","prompt","setPrompt","resultText","setResultText","pointsText","setPointsText","questionStats","setQuestionStats","currQkey","statsHeaders","nextQuestion","then","data","scrubbedPrompt","replace","buts","row","scrubbedBut","push","handleClick","e","correct","target","innerHTML","uname","localStorage","getItem","statsData","map","value","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {getQuestion, answeredQuestion, getQuestionStats} from '../api/questions';\nimport './style.scss';\nimport './quiz.scss';\n\n\n\nconst Quiz = () => {\n    // eslint-disable-next-line no-unused-vars\n    const [questionData, setQuestionData] = useState({})\n    const [correctResponse, setCorrectResponse] = useState(\"\")\n    const [buttons, setButtons] = useState([])\n    const [disabled, setDisabled] = useState(\"\")\n    const [prompt, setPrompt] = useState('')\n    const [resultText, setResultText] = useState(\"\")\n    const [pointsText, setPointsText] = useState(\"\")\n    const [questionStats, setQuestionStats] = useState([])\n\n    var currQkey;\n    let statsHeaders = [\"Question Key\", \"Total Answers\", \"Total Correct Answers\", \"Total First Tries\"]\n    useEffect(() => {\n        nextQuestion()        \n    }, []);\n\n    async function nextQuestion() {\n        //Call the api to get the next question data\n        getQuestion().then((data) => {\n            //Populate internal variables for later use\n            setQuestionData(data)\n            currQkey = data[\"prompt\"][0]\n            setDisabled(false)\n\n            //Populate the fields with the next question info\n            let scrubbedPrompt = data[\"prompt\"][2].replace(/&quot;/g, '\"')\n            scrubbedPrompt = scrubbedPrompt.replace(/&#039;/g, \"'\")\n            \n            setPrompt(scrubbedPrompt)\n            var buts = []\n            for (const row of data[\"responses\"]) {\n                let scrubbedBut = row[1].replace(/&quot;/g, '\\\\\"')\n                scrubbedBut = scrubbedBut.replace(/&#039;/g, '\\\\\"')\n                // buts.push(<button onClick={handleClick} disabled={disabled} key={scrubbedBut}>{scrubbedBut}</button>)\n                buts.push(scrubbedBut);\n                \n                if(row[2]) {\n                    // console.log(\"true!\")\n                    setCorrectResponse(scrubbedBut);\n                    // console.log(\"Correct Response is: \", scrubbedBut)\n                }\n            }\n            setButtons(buts)\n        })\n    }\n\n\n\n    function handleClick(e) {\n        let correct = false;\n        if(e.target.innerHTML === correctResponse) {\n            setResultText(\"Correct!\")\n            correct = true;\n        } else {\n            setResultText(\"Wrong!\")\n            correct = false;\n        }\n\n        let uname = localStorage.getItem(\"username\")\n        answeredQuestion(uname, questionData[\"prompt\"][0], correct)\n            .then((data) => {\n                setPointsText(data)\n            }).then(() => {\n                getQuestionStats(questionData[\"prompt\"][0]).then((data) => {\n                    let statsData = []\n                    statsData.push(data[\"question_key\"])\n                    statsData.push(data[\"total_amt\"])\n                    statsData.push(data[\"total_correct\"])\n                    statsData.push(data[\"total_first_try_correct\"])\n        \n                    setQuestionStats(statsData)\n                })\n            })\n\n        setDisabled(true)\n    }\n\n    return (\n        <div class=\"panel\">\n            <h2>Quiz</h2>\n            <h1>{prompt}</h1>\n            \n\n            <div class=\"button-grid\">\n                {/* {buttons} */}\n                {\n                    buttons.map((value) => {\n                        return <button onClick={handleClick} disabled={disabled} key={value}>{value}</button>\n                    })\n                }\n            </div>\n            \n            <div hidden={!disabled}>\n                <br/>\n                {<p>{resultText}</p>}\n                {resultText === \"Wrong!\" ? \n                    <p> Correct Answer: {correctResponse}</p>\n                    : null\n                }\n\n                {<p>You have {pointsText} points.</p>}\n\n                <button onClick={nextQuestion}>Next Question</button>\n                <br/>\n                \n                <h2>Statistics For This Question</h2>\n                <table class=\"question-stats\">\n                <tbody>\n                    {\n                        questionStats.map((value, index) => {\n                        return <tr key={index}><td class=\"td-header\">{statsHeaders[index]}:</td><td class=\"td-value\">{value}</td></tr>\n                        })\n                    }\n                    {\n                        <tr key={questionStats.length}><td class=\"td-header\">Total Wrong Answers</td><td class=\"td-value\">{questionStats[1]-questionStats[2]}</td></tr>\n                    }\n                </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}